name: Test InfluxDB v2.x

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          - elixir: '1.13.4'
            otp: '25.0'
            influxdb_image_version: '2.2.0'
            influxdb_test_version: '2.2'
          - elixir: '1.13.4'
            otp: '25.0'
            influxdb_image_version: '2.3.0'
            influxdb_test_version: '2.3'

    services:
      influxdb:
        image: influxdb:${{ matrix.influxdb_image_version }}
        ports:
          - 8086:8086

    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      INFLUXDB_VERSION: ${{ matrix.influxdb_test_version }}

    steps:
    - uses: actions/checkout@v2

    - name: setup
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: mix-cache
      uses: actions/cache@v1
      id: mix-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: mix-deps
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: test
      run: |
        until curl -s -o /dev/null 'http://localhost:8086' 2>/dev/null; do
          sleep 1
        done

        SETUP=$(
            curl -s \
                -XPOST http://localhost:8086/api/v2/setup \
                -H 'accept: application/json' \
                -d '{
                      "username": "instream_test",
                      "password": "instream_test",
                      "org": "instream_test",
                      "bucket": "test_bucket"
                    }'
        )

        echo $SETUP

        export INFLUXDB_BUCKETID=$(jq -r '.bucket.id' <<< "${SETUP}")
        export INFLUXDB_ORGID=$(jq -r '.org.id' <<< "${SETUP}")
        export INFLUXDB_TOKEN=$(jq -r '.auth.token' <<< "${SETUP}")

        RETENTION=$(
            curl -s \
                -XPOST http://localhost:8086/api/v2/dbrps \
                -H "Authorization: Token ${INFLUXDB_TOKEN}" \
                -H 'accept: application/json' \
                -d "{
                      \"bucketID\": \"${INFLUXDB_BUCKETID}\",
                      \"database\": \"mapped_database\",
                      \"default\": true,
                      \"orgID\": \"${INFLUXDB_ORGID}\",
                      \"retention_policy\": \"mapped_retention\"
                    }"
        )

        echo $RETENTION

        mix coveralls.github
